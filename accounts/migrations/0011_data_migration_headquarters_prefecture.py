# Generated by Django 5.0 on 2025-06-29 08:25

from django.db import migrations


def migrate_headquarters_and_prefecture(apps, schema_editor):
    Department = apps.get_model('accounts', 'Department')
    Headquarters = apps.get_model('accounts', 'Headquarters')
    Prefecture = apps.get_model('accounts', 'Prefecture')

    # Create Headquarters instances based on unique values in Department
    # Note: At this point, 'headquarters' is still a CharField
    headquarters_values = Department.objects.exclude(headquarters__isnull=True).exclude(headquarters='').values_list('headquarters', flat=True).distinct()
    for hq_value in headquarters_values:
        Headquarters.objects.get_or_create(code=hq_value, defaults={'name': hq_value, 'is_active': True})

    # Create Prefecture instances based on unique values in Department
    # Note: At this point, 'prefecture' is still a CharField
    prefecture_values = Department.objects.exclude(prefecture__isnull=True).exclude(prefecture='').values_list('prefecture', flat=True).distinct()
    for pref_value in prefecture_values:
        Prefecture.objects.get_or_create(code=pref_value, defaults={'name': pref_value, 'is_active': True})

    # Update temporary fields in Department instances to link to Headquarters and Prefecture
    for dept in Department.objects.all():
        if dept.headquarters:
            try:
                hq = Headquarters.objects.get(code=dept.headquarters)
                dept.headquarters_temp = hq
            except Headquarters.DoesNotExist:
                pass
        if dept.prefecture:
            try:
                pref = Prefecture.objects.get(code=dept.prefecture)
                dept.prefecture_temp = pref
            except Prefecture.DoesNotExist:
                pass
        dept.save()


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0010_headquarters_prefecture_and_more'),
    ]

    operations = [
        migrations.RunPython(migrate_headquarters_and_prefecture),
    ]
